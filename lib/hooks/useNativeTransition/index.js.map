{"version":3,"sources":["../../../src/hooks/useNativeTransition/index.js"],"names":["useNativeTransition","cssProperties","duration","defaultDuration","ref","onComplete","initialCssProperties","node","setNode","animationFrameRef","callbackRef","hasOwnProperty","current","Object","keys","forEach","key","value","style","cancelAnimationFrame","requestAnimationFrame","transition","map","property","durationOverride","easingName","easing","startAt","endAt","delay","bezierCurveEasings","expo","originalDuration","join","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { useState, useCallback, useEffect, useRef } from \"react\";\nimport transfromAnimatedProperties from \"../useTransition/transformAnimatedProperties\";\nimport { bezierCurveEasings } from \"../useTransition/easeOut\";\n\nconst useNativeTransition = (\n  cssProperties,\n  {\n    duration: defaultDuration = 0,\n    ref,\n    onComplete,\n    initialCssProperties = null\n  }\n) => {\n  const [node, setNode] = useState(null);\n  const animationFrameRef = useRef(null);\n\n  const callbackRef = useCallback(\n    node => {\n      if (node != null) {\n        if (typeof ref === \"function\") {\n          ref(node);\n        } else if (\n          typeof ref === \"object\" &&\n          ref != null &&\n          ref.hasOwnProperty(\"current\")\n        ) {\n          ref.current = node;\n        }\n\n        if (initialCssProperties != null) {\n          transfromAnimatedProperties(initialCssProperties);\n\n          Object.keys(initialCssProperties).forEach(key => {\n            const { value } = initialCssProperties[key];\n            node.style[key] = value;\n          });\n        } else {\n          transfromAnimatedProperties(cssProperties);\n\n          Object.keys(cssProperties).forEach(key => {\n            const { value } = cssProperties[key];\n            node.style[key] = value;\n          });\n        }\n\n        setNode(node);\n      }\n    },\n    [ref, initialCssProperties, cssProperties]\n  );\n\n  useEffect(() => {\n    if (cssProperties != null && node != null) {\n        cancelAnimationFrame(animationFrameRef.current);\n        animationFrameRef.current = requestAnimationFrame(()=>{\n            transfromAnimatedProperties(cssProperties);\n\n            const transition = Object.keys(cssProperties)\n              .map(property => {\n                let {\n                  duration: durationOverride,\n                  easing: easingName,\n                  startAt = 0,\n                  endAt = 1\n                } = cssProperties[property];\n      \n                let delay;\n                let easing =\n                  bezierCurveEasings[easingName] != null\n                    ? bezierCurveEasings[easingName]\n                    : bezierCurveEasings.expo;\n                let duration =\n                  typeof durationOverride === \"number\"\n                    ? durationOverride\n                    : defaultDuration;\n      \n                startAt = typeof startAt === \"number\" ? startAt : 0;\n                endAt = typeof endAt === \"number\" ? endAt : 0;\n      \n                const originalDuration = duration;\n                duration = (endAt - startAt) * originalDuration;\n                delay = `${startAt * originalDuration}`;\n      \n                return `${property} ${duration}ms ${easing} ${delay}ms`;\n              })\n              .join(\", \");\n      \n            node.style.transition = transition;\n      \n            Object.keys(cssProperties).forEach(key => {\n              const { value } = cssProperties[key];\n              node.style[key] = value;\n            });\n        });\n    }\n  }, [initialCssProperties, cssProperties, defaultDuration, node]);\n\n  useEffect(() => {\n    if (node != null) {\n      if (typeof onComplete === \"function\") {\n        node.addEventListener(\"transitionend\", onComplete);\n      }\n      return () => {\n        node.removeEventListener(\"transitionend\", onComplete);\n      };\n    }\n  }, [node, onComplete]);\n\n  return callbackRef;\n};\n\nexport default useNativeTransition;\n"],"file":"index.js"}