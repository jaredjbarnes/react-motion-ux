{"version":3,"sources":["../../../../src/hooks/makeNativeTransition/stories/NamedIcon.js"],"names":["wrapperStyle","display","containerStyle","position","height","width","overflow","cursor","userSelect","lineStyle","bottom","left","backgroundColor","borderRadius","nameStyle","top","fontFamily","fontSize","lineHeight","boxSizing","iconContainer","alignItems","justifyContent","color","useLineStyledMotion","inactive","active","useContainerStyledMotion","useNameStyledMotion","transform","value","startAt","endAt","useIconStyledMotion","controls","easing","NamedIcon","name","isActive","children","props","state","lineRef","containerRef","nameRef","iconRef"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport makeStyledTransition from \"../index\";\n\nconst wrapperStyle = {\n  display: \"inline-block\"\n};\n\nconst containerStyle = {\n  display: \"block\",\n  position: \"relative\",\n  height: \"40px\",\n  width: \"30px\",\n  overflow: \"hidden\",\n  cursor: \"pointer\",\n  userSelect: \"none\"\n};\n\nconst lineStyle = {\n  position: \"absolute\",\n  bottom: \"0px\",\n  left: \"0px\",\n  width: \"0px\",\n  height: \"3px\",\n  backgroundColor: \"#ccc\",\n  borderRadius: \"2px\"\n};\n\nconst nameStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: \"32px\",\n  fontFamily: \"Arial\",\n  fontSize: \"18px\",\n  height: \"40px\",\n  lineHeight: \"30px\",\n  boxSizing: \"border-box\"\n};\n\nconst iconContainer = {\n  position: \"absolute\",\n  width: \"30px\",\n  height: \"40px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  fontSize: \"30px\",\n  color: \"#ccc\"\n};\n\nconst useLineStyledMotion = makeStyledTransition(\n  ({ width }) => ({\n    inactive: {\n      width: \"0px\",\n      left: \"0px\"\n    },\n    active: {\n      width: `${width}px`,\n      left: \"30px\"\n    }\n  }),\n  400\n);\n\nconst useContainerStyledMotion = makeStyledTransition(\n  ({ width }) => ({\n    inactive: {\n      width: \"30px\"\n    },\n    active: {\n      width: `${width + 30}px`\n    }\n  }),\n  400\n);\n\nconst useNameStyledMotion = makeStyledTransition(\n  {\n    inactive: {\n      transform: { value: \"translate(0px, 40px)\", startAt: 0, endAt: 0.5 }\n    },\n    active: {\n      transform: \"translate(0px, 10px)\"\n    }\n  },\n  400\n);\n\nconst useIconStyledMotion = makeStyledTransition(\n  ({ color }) => ({\n    inactive: {\n      transform: \"scale(1, 1)\",\n      color: \"rgba(204,204,204,1)\"\n    },\n    active: {\n      transform: {\n        value: \"scale(1, 1)\",\n        controls: [\"scale(1,1.75)\"],\n        easing: \"overshoot\"\n      },\n      color: color\n    }\n  }),\n  800\n);\n\nconst NamedIcon = ({\n  color: backgroundColor = \"rgba(118, 209, 197, 1)\",\n  name,\n  width = 100,\n  isActive = false,\n  children,\n  ...props\n} = {}) => {\n  const state = isActive ? \"active\" : \"inactive\";\n\n  const lineRef = useLineStyledMotion(state, { props: { width } });\n  const containerRef = useContainerStyledMotion(state, { props: { width } });\n  const nameRef = useNameStyledMotion(state);\n  const iconRef = useIconStyledMotion(state, {\n    props: { color: backgroundColor }\n  });\n\n  return (\n    <div style={wrapperStyle} {...props}>\n      <div ref={containerRef} style={containerStyle}>\n        <div ref={nameRef} style={{ ...nameStyle, color: backgroundColor }}>\n          {name}\n        </div>\n        <div ref={lineRef} style={{ ...lineStyle, backgroundColor }}></div>\n        <div ref={iconRef} style={iconContainer}>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NamedIcon;\n"],"file":"NamedIcon.js"}