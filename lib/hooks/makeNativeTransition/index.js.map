{"version":3,"sources":["../../../src/hooks/makeNativeTransition/index.js"],"names":["makeNativeTransition","suppliedStates","duration","getStateCssProperties","name","props","states","stateNames","Object","keys","join","cssProperties","Error","stateName","rest"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;AAEA,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,cAAD,EAAiBC,QAAjB,EAA8B;AACzD,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7C,QAAIC,MAAJ;;AAEA,QAAI,OAAOL,cAAP,KAA0B,UAA9B,EAA0C;AACxCK,MAAAA,MAAM,GAAGL,cAAc,CAACI,KAAD,CAAvB;AACD,KAFD,MAEO;AACLC,MAAAA,MAAM,GAAGL,cAAT;AACD;;AAED,QAAMM,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,CAAyB,IAAzB,CAAnB;AACA,QAAMC,aAAa,GAAGL,MAAM,CAACF,IAAD,CAA5B;;AAEA,QAAIO,aAAa,IAAI,IAArB,EAA2B;AACzB,YAAM,IAAIC,KAAJ,2CAC+BR,IAD/B,sCAC+DG,UAD/D,OAAN;AAGD;;AAED,QAAIH,IAAI,IAAI,IAAZ,EAAkB;AAChB,YAAM,IAAIQ,KAAJ,2CAC+BR,IAD/B,sCAC+DG,UAD/D,wEAAN;AAGD;;AAED,WAAOI,aAAP;AACD,GAzBD;;AA2BA,SAAO,UAACE,SAAD,EAAwC;AAAA,mFAAP,EAAO;AAAA,QAA1BR,KAA0B,QAA1BA,KAA0B;AAAA,QAAhBS,IAAgB;;AAC7C,QAAMH,aAAa,GAAGR,qBAAqB,CAACU,SAAD,EAAYR,KAAZ,CAA3C;AACA,WAAO,kCAAoBM,aAApB;AAAqCT,MAAAA,QAAQ,EAARA;AAArC,OAAkDY,IAAlD,EAAP;AACD,GAHD;AAID,CAhCD;;eAkCed,oB","sourcesContent":["import useNativeTransition from \"../useNativeTransition\";\n\nconst makeNativeTransition = (suppliedStates, duration) => {\n  const getStateCssProperties = (name, props) => {\n    let states;\n\n    if (typeof suppliedStates === \"function\") {\n      states = suppliedStates(props);\n    } else {\n      states = suppliedStates;\n    }\n\n    const stateNames = Object.keys(states).join(\", \");\n    const cssProperties = states[name];\n\n    if (cssProperties == null) {\n      throw new Error(\n        `Invalid Arguments: Cannot find '${name}' within defined states: ${stateNames}.`\n      );\n    }\n\n    if (name == null) {\n      throw new Error(\n        `Invalid Arguments: Cannot find '${name}' within defined states: ${stateNames}, you may have forgotten to pass the state name in as an argument.`\n      );\n    }\n\n    return cssProperties;\n  };\n\n  return (stateName, { props, ...rest } = {}) => {\n    const cssProperties = getStateCssProperties(stateName, props);\n    return useNativeTransition(cssProperties, { duration, ...rest });\n  };\n};\n\nexport default makeNativeTransition;\n"],"file":"index.js"}