{"version":3,"sources":["../../../../src/hooks/makeStyledTransition/stories/Blink.js"],"names":["container","display","alignItems","justifyContent","width","height","style","backgroundColor","borderRadius","useStyledMotion","on","opacity","off","Blink","state","setState","ref"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,aADO;AAEhBC,EAAAA,UAAU,EAAE,QAFI;AAGhBC,EAAAA,cAAc,EAAE,QAHA;AAIhBC,EAAAA,KAAK,EAAE,OAJS;AAKhBC,EAAAA,MAAM,EAAE;AALQ,CAAlB;AAQA,IAAMC,KAAK,GAAG;AACZC,EAAAA,eAAe,EAAE,qBADL;AAEZH,EAAAA,KAAK,EAAE,KAFK;AAGZC,EAAAA,MAAM,EAAE,KAHI;AAIZG,EAAAA,YAAY,EAAE;AAJF,CAAd;AAOA,IAAMC,eAAe,GAAG,oBACtB;AACEC,EAAAA,EAAE,EAAE;AACFN,IAAAA,KAAK,EAAE,OADL;AAEFC,IAAAA,MAAM,EAAE,OAFN;AAGFM,IAAAA,OAAO,EAAE;AAHP,GADN;AAMEC,EAAAA,GAAG,EAAE;AACHR,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,MAAM,EAAE,KAFL;AAGHM,IAAAA,OAAO,EAAE;AAHN;AANP,CADsB,EAatB,IAbsB,CAAxB;;AAgBA,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACQ,qBAAS,KAAT,CADR;AAAA;AAAA,MACXC,KADW;AAAA,MACJC,QADI;;AAGlB,MAAMC,GAAG,GAAGP,eAAe,CAACK,KAAD,CAA3B;AAEA,4BAAY,YAAM;AAChB,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAND,EAMG,IANH;AAQA,SACE;AAAK,IAAA,KAAK,EAAEf;AAAZ,KACE;AAAK,IAAA,GAAG,EAAEgB,GAAV;AAAe,IAAA,KAAK,EAAEV;AAAtB,IADF,CADF;AAKD,CAlBD;;eAoBeO,K","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport makeStyledTransition from \"../index\";\nimport useInterval from \"../../useInterval\";\n\nconst container = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: \"100px\",\n  height: \"100px\"\n};\n\nconst style = {\n  backgroundColor: \"rgba(204,204,204,1)\",\n  width: \"0px\",\n  height: \"0px\",\n  borderRadius: \"50px\"\n};\n\nconst useStyledMotion = makeStyledTransition(\n  {\n    on: {\n      width: \"100px\",\n      height: \"100px\",\n      opacity: \"1\"\n    },\n    off: {\n      width: \"0px\",\n      height: \"0px\",\n      opacity: \"0\"\n    }\n  },\n  1000\n);\n\nconst Blink = () => {\n  const [state, setState] = useState(\"off\");\n  \n  const ref = useStyledMotion(state);\n\n  useInterval(() => {\n    if (state === \"on\") {\n      setState(\"off\");\n    } else {\n      setState(\"on\");\n    }\n  }, 2000);\n\n  return (\n    <div style={container}>\n      <div ref={ref} style={style}></div>\n    </div>\n  );\n};\n\nexport default Blink;\n"],"file":"Blink.js"}