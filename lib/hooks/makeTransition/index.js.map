{"version":3,"sources":["../../../src/hooks/makeTransition/index.js"],"names":["makeTransition","states","duration","applyValues","stateName","props","ref","animate","onComplete","configure","durationOverride","Error","Object","keys","join","map","state","initialProperties","initial"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASC,QAAT,EAAmBC,WAAnB,EAAmC;AACxD,SAAO,UAACC,SAAD,EAAgG;AAAA,mFAAP,EAAO;AAAA,QAAlFC,KAAkF,QAAlFA,KAAkF;AAAA,QAA3EC,GAA2E,QAA3EA,GAA2E;AAAA,QAAtEC,OAAsE,QAAtEA,OAAsE;AAAA,QAA7DC,UAA6D,QAA7DA,UAA6D;AAAA,QAAjDC,SAAiD,QAAjDA,SAAiD;AAAA,QAA5BC,gBAA4B,QAAtCR,QAAsC;;AACrGA,IAAAA,QAAQ,GAAG,OAAOQ,gBAAP,KAA4B,QAA5B,GAAuCA,gBAAvC,GAA0DR,QAArE;;AAEA,QAAIE,SAAS,IAAI,IAAjB,EAAuB;AACrB,YAAM,IAAIO,KAAJ,2CAC+BP,SAD/B,sCACoEQ,MAAM,CAACC,IAAP,CACtEZ,MADsE,EAEtEa,IAFsE,CAEjE,IAFiE,CADpE,wEAAN;AAKD;;AAED,QAAIC,GAAJ;;AAEA,QAAI,OAAOd,MAAP,KAAkB,UAAtB,EAAkC;AAChCc,MAAAA,GAAG,GAAGd,MAAM,CAACI,KAAD,CAAZ;AACD,KAFD,MAEO;AACLU,MAAAA,GAAG,GAAGd,MAAN;AACD;;AAED,QAAMe,KAAK,GAAGD,GAAG,CAACX,SAAD,CAAjB;AACA,QAAMa,iBAAiB,GAAGF,GAAG,CAACG,OAAJ,IAAe,IAAzC;;AAEA,QAAIF,KAAK,IAAI,IAAb,EAAmB;AACjB,YAAM,IAAIL,KAAJ,2CAA6CP,SAA7C,sCAAkFQ,MAAM,CAACC,IAAP,CACtFZ,MADsF,EAEtFa,IAFsF,CAEjF,IAFiF,CAAlF,OAAN;AAGD;;AAED,WAAO,4BAAcE,KAAd,EAAqB;AAC1Bd,MAAAA,QAAQ,EAARA,QAD0B;AAE1BC,MAAAA,WAAW,EAAXA,WAF0B;AAG1BG,MAAAA,GAAG,EAAHA,GAH0B;AAI1BC,MAAAA,OAAO,EAAPA,OAJ0B;AAK1BC,MAAAA,UAAU,EAAVA,UAL0B;AAM1BC,MAAAA,SAAS,EAATA,SAN0B;AAO1BQ,MAAAA,iBAAiB,EAAjBA;AAP0B,KAArB,CAAP;AASD,GArCD;AAsCD,CAvCD;;eAyCejB,c","sourcesContent":["import useTransition from \"../useTransition\";\n\nconst makeTransition = (states, duration, applyValues) => {\n  return (stateName, { props, ref, animate, onComplete, configure, duration: durationOverride } = {}) => {\n    duration = typeof durationOverride === \"number\" ? durationOverride : duration;\n    \n    if (stateName == null) {\n      throw new Error(\n        `Invalid Arguments: Cannot find '${stateName}' within defined states: ${Object.keys(\n          states\n        ).join(\", \")}, you may have forgotten to pass the state name in as an argument.`\n      );\n    }\n\n    let map;\n\n    if (typeof states === \"function\") {\n      map = states(props);\n    } else {\n      map = states;\n    }\n\n    const state = map[stateName];\n    const initialProperties = map.initial || null;\n\n    if (state == null) {\n      throw new Error(`Invalid Arguments: Cannot find '${stateName}' within defined states: ${Object.keys(\n        states\n      ).join(\", \")}.`);\n    }\n\n    return useTransition(state, {\n      duration,\n      applyValues,\n      ref,\n      animate,\n      onComplete,\n      configure,\n      initialProperties\n    });\n  };\n};\n\nexport default makeTransition;\n"],"file":"index.js"}