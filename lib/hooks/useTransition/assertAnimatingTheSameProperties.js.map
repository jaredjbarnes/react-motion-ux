{"version":3,"sources":["../../../src/hooks/useTransition/assertAnimatingTheSameProperties.js"],"names":["assertAnimatingTheSameProperties","animatedPropertiesA","animatedPropertiesB","keysA","Object","keys","keysB","sort","areTheSame","join","Error","JSON","stringify"],"mappings":";;;;;;;AAAA,IAAMA,gCAAgC,GAAG,SAAnCA,gCAAmC,CACvCC,mBADuC,EAEvCC,mBAFuC,EAGpC;AACH,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,mBAAZ,CAAd;AACA,MAAMK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,mBAAZ,CAAd;AAEAC,EAAAA,KAAK,CAACI,IAAN;AACAD,EAAAA,KAAK,CAACC,IAAN;AAEA,MAAMC,UAAU,GAAGL,KAAK,CAACM,IAAN,CAAW,GAAX,MAAoBH,KAAK,CAACG,IAAN,CAAW,GAAX,CAAvC;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACf,UAAM,IAAIE,KAAJ,2IAC+HC,IAAI,CAACC,SAAL,CACjIX,mBADiI,CAD/H,kBAGKU,IAAI,CAACC,SAAL,CAAeV,mBAAf,CAHL,EAAN;AAKD;AACF,CAnBD;;eAqBeF,gC","sourcesContent":["const assertAnimatingTheSameProperties = (\n  animatedPropertiesA,\n  animatedPropertiesB\n) => {\n  const keysA = Object.keys(animatedPropertiesA);\n  const keysB = Object.keys(animatedPropertiesB);\n\n  keysA.sort();\n  keysB.sort();\n\n  const areTheSame = keysA.join(\"|\") === keysB.join(\"|\");\n\n  if (!areTheSame) {\n    throw new Error(\n      `Invalid Arguments: When transitioning, you need to animate all of the same properties, these have different property sets. From:${JSON.stringify(\n        animatedPropertiesA\n      )}, To:${JSON.stringify(animatedPropertiesB)}`\n    );\n  }\n};\n\nexport default assertAnimatingTheSameProperties;\n"],"file":"assertAnimatingTheSameProperties.js"}