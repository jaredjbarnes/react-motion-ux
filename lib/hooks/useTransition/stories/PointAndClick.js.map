{"version":3,"sources":["../../../../src/hooks/useTransition/stories/PointAndClick.js"],"names":["containerStyle","position","width","height","dotStyle","top","left","transform","borderRadius","backgroundColor","getRandomNumber","min","max","range","Math","round","random","createRandomColor","applyStyles","element","values","style","Object","keys","forEach","key","PointAndClick","containerRef","state","setState","ref","duration","applyValues","onClick","event","color","containerRect","current","getBoundingClientRect","x","pageX","y","pageY"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAG;AACrBC,EAAAA,QAAQ,EAAE,UADW;AAErBC,EAAAA,KAAK,EAAE,MAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB;AAMA,IAAMC,QAAQ,GAAG;AACfH,EAAAA,QAAQ,EAAE,UADK;AAEfI,EAAAA,GAAG,EAAE,KAFU;AAGfC,EAAAA,IAAI,EAAE,KAHS;AAIfC,EAAAA,SAAS,EAAE,oBAJI;AAKfC,EAAAA,YAAY,EAAE,KALC;AAMfC,EAAAA,eAAe,EAAE,KANF;AAOfP,EAAAA,KAAK,EAAE,MAPQ;AAQfC,EAAAA,MAAM,EAAE;AARO,CAAjB;;AAWA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,MAAMC,KAAK,GAAGD,GAAG,GAAGD,GAApB;AACA,SAAOA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAA3B,CAAb;AACD,CAHD;;AAKA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,wBAAeP,eAAe,CAAC,CAAD,EAAI,GAAJ,CAA9B,cAA0CA,eAAe,CACvD,CADuD,EAEvD,GAFuD,CAAzD,cAGKA,eAAe,CAAC,CAAD,EAAI,GAAJ,CAHpB,eAGiC,GAAGA,eAAe,CAAC,GAAD,EAAM,CAAN,CAHnD;AAID,CALD;;AAOA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,MAAID,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACE,KAAR,IAAiB,IAAxC,EAA8C;AAC5CC,IAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAAC,GAAG,EAAI;AACjCN,MAAAA,OAAO,CAACE,KAAR,CAAcI,GAAd,IAAqBL,MAAM,CAACK,GAAD,CAA3B;AACD,KAFD;AAGD;AACF,CAND;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,YAAY,GAAG,mBAAO,IAAP,CAArB;;AAD0B,kBAGA,qBAAS;AACjCpB,IAAAA,SAAS,EAAE,qBADsB;AAEjCE,IAAAA,eAAe,EAAE;AAFgB,GAAT,CAHA;AAAA;AAAA,MAGnBmB,KAHmB;AAAA,MAGZC,QAHY;;AAQ1B,MAAMC,GAAG,GAAG,oBAAcF,KAAd,EAAqB;AAC/BG,IAAAA,QAAQ,EAAE,IADqB;AAE/BC,IAAAA,WAAW,EAAEd;AAFkB,GAArB,CAAZ;;AAKA,MAAMe,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvB,QAAMC,KAAK,GAAGlB,iBAAiB,EAA/B;AACA,QAAMmB,aAAa,GAAGT,YAAY,CAACU,OAAb,CAAqBC,qBAArB,EAAtB;AACA,QAAMC,CAAC,GAAGL,KAAK,CAACM,KAAN,GAAcJ,aAAa,CAAC9B,IAAtC;AACA,QAAMmC,CAAC,GAAGP,KAAK,CAACQ,KAAN,GAAcN,aAAa,CAAC/B,GAAtC;AAEAwB,IAAAA,QAAQ,CAAC;AACPtB,MAAAA,SAAS,sBAAegC,CAAf,gBAAsBE,CAAtB,QADF;AAEPhC,MAAAA,eAAe,EAAE0B;AAFV,KAAD,CAAR;AAID,GAVD;;AAYA,SACE;AAAK,IAAA,GAAG,EAAER,YAAV;AAAwB,IAAA,KAAK,EAAE3B,cAA/B;AAA+C,IAAA,OAAO,EAAEiC;AAAxD,KACE;AAAK,IAAA,GAAG,EAAEH,GAAV;AAAe,IAAA,KAAK,EAAE1B;AAAtB,IADF,CADF;AAKD,CA9BD;;eAgCesB,a","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport useTransition from \"../index\";\n\nconst containerStyle = {\n  position: \"relative\",\n  width: \"100%\",\n  height: \"100%\"\n};\n\nconst dotStyle = {\n  position: \"absolute\",\n  top: \"0px\",\n  left: \"0px\",\n  transform: \"translate(0px,0px)\",\n  borderRadius: \"50%\",\n  backgroundColor: \"red\",\n  width: \"50px\",\n  height: \"50px\"\n};\n\nconst getRandomNumber = (min, max) => {\n  const range = max - min;\n  return min + Math.round(Math.random() * range);\n};\n\nconst createRandomColor = () => {\n  return `rgba(${getRandomNumber(0, 255)},${getRandomNumber(\n    0,\n    255\n  )},${getRandomNumber(0, 255)},${(0, getRandomNumber(0.5, 1))})`;\n};\n\nconst applyStyles = (element, values) => {\n  if (element != null && element.style != null) {\n    Object.keys(values).forEach(key => {\n      element.style[key] = values[key];\n    });\n  }\n};\n\nconst PointAndClick = () => {\n  const containerRef = useRef(null);\n\n  const [state, setState] = useState({\n    transform: \"translate(0px, 0px)\",\n    backgroundColor: \"rgba(255,0,0,1)\"\n  });\n\n  const ref = useTransition(state, {\n    duration: 5000,\n    applyValues: applyStyles\n  });\n\n  const onClick = event => {\n    const color = createRandomColor();\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const x = event.pageX - containerRect.left;\n    const y = event.pageY - containerRect.top;\n\n    setState({\n      transform: `translate(${x}px,${y}px)`,\n      backgroundColor: color\n    });\n  };\n\n  return (\n    <div ref={containerRef} style={containerStyle} onClick={onClick}>\n      <div ref={ref} style={dotStyle}></div>\n    </div>\n  );\n};\n\nexport default PointAndClick;\n"],"file":"PointAndClick.js"}