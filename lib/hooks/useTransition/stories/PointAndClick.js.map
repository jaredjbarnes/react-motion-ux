{"version":3,"sources":["../../../../src/hooks/useTransition/stories/PointAndClick.js"],"names":["containerStyle","position","top","left","right","bottom","dotStyle","transform","borderRadius","backgroundColor","width","height","getRandomNumber","min","max","range","Math","round","random","createRandomColor","applyStyles","element","values","style","Object","keys","forEach","key","Ball","x","y","ref","value","duration","applyValues","PointAndClick","containerRef","timeoutRef","state","setState","onClick","event","color","containerRect","current","getBoundingClientRect","pageX","pageY","clearTimeout","setTimeout"],"mappings":"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","sourcesContent":["import { Easing, easings } from \"motion-ux\";\nimport React, { useState, useRef } from \"react\";\nimport useTransition from \"../index\";\n\nconst containerStyle = {\n  position: \"absolute\",\n  top: \"0\",\n  left: \"0\",\n  right: \"0\",\n  bottom: \"0\",\n};\n\nconst dotStyle = {\n  position: \"absolute\",\n  top: \"0px\",\n  left: \"0px\",\n  transform: \"translate(0px,0px)\",\n  borderRadius: \"50%\",\n  backgroundColor: \"red\",\n  width: \"50px\",\n  height: \"50px\",\n};\n\nconst getRandomNumber = (min, max) => {\n  const range = max - min;\n  return min + Math.round(Math.random() * range);\n};\n\nconst createRandomColor = () => {\n  return `rgba(${getRandomNumber(0, 255)},${getRandomNumber(\n    0,\n    255\n  )},${getRandomNumber(0, 255)},${(0, getRandomNumber(0.5, 1))})`;\n};\n\nconst applyStyles = (element, values) => {\n  if (element != null && element.style != null) {\n    Object.keys(values).forEach((key) => {\n      element.style[key] = values[key];\n    });\n  }\n};\n\nfunction Ball({ x, y, backgroundColor }) {\n  const ref = useTransition(\n    {\n      transform: {\n        value: `translate(${x}px, ${y}px)`,\n      },\n      backgroundColor: backgroundColor,\n    },\n    {\n      duration: 3000,\n      applyValues: applyStyles,\n    }\n  );\n\n  return <div ref={ref} style={dotStyle}></div>;\n}\n\nconst PointAndClick = () => {\n  const containerRef = useRef(null);\n  const timeoutRef = useRef(0);\n\n  const [state, setState] = useState(() => ({\n    x: 0,\n    y: 0,\n    backgroundColor: \"rgba(255,0,0,1)\",\n  }));\n\n  const onClick = (event) => {\n    const color = createRandomColor();\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const x = event.pageX - containerRect.left;\n    const y = event.pageY - containerRect.top;\n\n    clearTimeout(timeoutRef.current);\n    setTimeout(() => {\n      setState({\n        x,\n        y,\n        backgroundColor: color,\n      });\n    }, 100);\n  };\n\n  return (\n    <div ref={containerRef} style={containerStyle} onMouseMove={onClick}>\n      <Ball {...state} />\n    </div>\n  );\n};\n\nexport default PointAndClick;\n"],"file":"PointAndClick.js"}