{"version":3,"sources":["../../../../src/hooks/useTransition/stories/Compass.js"],"names":["states","left","transform","border","up","down","right","applyStyleValues","element","values","style","Object","keys","forEach","key","containerStyle","display","position","width","height","Compass","defaultPosition","animate","ref","setPosition","placement","background","borderRadius"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,uBADP;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GADO;AAKbC,EAAAA,EAAE,EAAE;AACFF,IAAAA,SAAS,EAAE,uBADT;AAEFC,IAAAA,MAAM,EAAE;AAFN,GALS;AASbE,EAAAA,IAAI,EAAE;AACJH,IAAAA,SAAS,EAAE,yBADP;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GATO;AAabG,EAAAA,KAAK,EAAE;AACLJ,IAAAA,SAAS,EAAE,yBADN;AAELC,IAAAA,MAAM,EAAE;AAFH;AAbM,CAAf;;AAmBA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5C,MAAID,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACE,KAAR,IAAiB,IAAxC,EAA8C;AAC5CC,IAAAA,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAAC,GAAG,EAAI;AACjCN,MAAAA,OAAO,CAACE,KAAR,CAAcI,GAAd,IAAqBL,MAAM,CAACK,GAAD,CAA3B;AACD,KAFD;AAGD;AACF,CAND;;AAQA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAE,cADY;AAErBC,EAAAA,QAAQ,EAAE,UAFW;AAGrBC,EAAAA,KAAK,EAAE,OAHc;AAIrBC,EAAAA,MAAM,EAAE;AAJa,CAAvB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA4C;AAAA,MAA/BC,eAA+B,QAAzCJ,QAAyC;AAAA,MAAdK,OAAc,QAAdA,OAAc;AAC1D,MAAMC,GAAG,GAAG,mBAAO,IAAP,CAAZ;;AAD0D,kBAE1B,qBAASF,eAAT,CAF0B;AAAA;AAAA,MAEnDJ,QAFmD;AAAA,MAEzCO,WAFyC;;AAG1D,MAAMC,SAAS,GAAGzB,MAAM,CAACiB,QAAD,CAAxB;AAEA,sBAAQ,YAAM;AACZO,IAAAA,WAAW,CAACH,eAAD,CAAX;AACD,GAFD,EAEG,CAACA,eAAD,CAFH;AAIA,sBAAc,oBAAMI,SAAN,CAAd,EAAgC,IAAhC,EAAsClB,gBAAtC,EAAwDgB,GAAxD,EAA6DD,OAA7D;AAEA,MAAMZ,KAAK,GAAG;AACZO,IAAAA,QAAQ,EAAE,UADE;AAEZS,IAAAA,UAAU,EAAE,wBAFA;AAGZC,IAAAA,YAAY,EAAE,SAHF;AAIZT,IAAAA,KAAK,EAAE,OAJK;AAKZC,IAAAA,MAAM,EAAE;AALI,GAAd;AAQA,SACE;AAAK,IAAA,KAAK,EAAEJ;AAAZ,KACE;AAAK,IAAA,GAAG,EAAEQ,GAAV;AAAe,IAAA,KAAK,EAAEb;AAAtB,IADF,CADF;AAKD,CAxBD;;eA0BeU,O","sourcesContent":["import React, { useState, useMemo, useRef } from \"react\";\nimport useTransition from \"../index\";\nimport clone from \"../../clone\";\n\nconst states = {\n  left: {\n    transform: \"translate(0px, 150px)\",\n    border: \"15px solid rgba(124, 151, 124, 1)\"\n  },\n  up: {\n    transform: \"translate(150px, 0px)\",\n    border: \"10px solid rgba(46, 66, 61, 1)\"\n  },\n  down: {\n    transform: \"translate(150px, 300px)\",\n    border: \"35px solid rgba(147, 170, 162, 1)\"\n  },\n  right: {\n    transform: \"translate(300px, 150px)\",\n    border: \"30px solid rgba(191, 192, 190, 1)\"\n  }\n};\n\nconst applyStyleValues = (element, values) => {\n  if (element != null && element.style != null) {\n    Object.keys(values).forEach(key => {\n      element.style[key] = values[key];\n    });\n  }\n};\n\nconst containerStyle = {\n  display: \"inline-block\",\n  position: \"relative\",\n  width: \"300px\",\n  height: \"300px\"\n};\n\nconst Compass = ({ position: defaultPosition, animate }) => {\n  const ref = useRef(null);\n  const [position, setPosition] = useState(defaultPosition);\n  const placement = states[position];\n\n  useMemo(() => {\n    setPosition(defaultPosition);\n  }, [defaultPosition]);\n\n  useTransition(clone(placement), 2000, applyStyleValues, ref, animate);\n\n  const style = {\n    position: \"absolute\",\n    background: \"rgba(239, 240, 242, 1)\",\n    borderRadius: \"50% 50%\",\n    width: \"100px\",\n    height: \"100px\"\n  };\n\n  return (\n    <div style={containerStyle}>\n      <div ref={ref} style={style}></div>\n    </div>\n  );\n};\n\nexport default Compass;\n"],"file":"Compass.js"}