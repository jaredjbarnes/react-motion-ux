{"version":3,"sources":["../../../../src/hooks/useTransition/stories/PipelinePath.js"],"names":["svgStyle","position","top","left","width","height","defaultValue","originX","originY","destinationX","destinationY","curveWidth","animated","startKnobStyle","backgroundColor","borderRadius","endKnobStyle","applyAttributeValues","element","values","setAttribute","Object","keys","forEach","key","applyStyles","style","PipelinePath","animate","controlPoint1","x","y","controlPoint2","ref","d","startKnobRef","transform","endKnobRef"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport useTransition from \"../index\";\n\nconst svgStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\"\n};\n\nconst defaultValue = {\n  originX: 0,\n  originY: 0,\n  destinationX: 0,\n  destinationY: 0,\n  curveWidth: 100,\n  animated: true\n};\n\nconst startKnobStyle = {\n  backgroundColor: \"rgba(0,0,0,1)\",\n  borderRadius: \"0px 5px 5px 0px\",\n  height: \"9px\",\n  width: \"9px\"\n};\n\nconst endKnobStyle = {\n  backgroundColor: \"rgba(0,0,0,1)\",\n  borderRadius: \"8px 0px 0px 8px\",\n  height: \"15px\",\n  width: \"15px\"\n};\n\nconst applyAttributeValues = (element, values) => {\n  if (element != null && typeof element.setAttribute === \"function\") {\n    Object.keys(values).forEach(key => {\n      element.setAttribute(key, values[key]);\n    });\n  }\n};\n\nconst applyStyles = (element, values) => {\n  if (element != null && element.style != null) {\n    Object.keys(values).forEach(key => {\n      element.style[key] = values[key];\n    });\n  }\n};\n\nconst PipelinePath = ({\n  originX = 0,\n  originY = 0,\n  destinationX = 0,\n  destinationY = 0,\n  curveWidth = 100,\n  animate = true\n} = defaultValue) => {\n  const controlPoint1 = {\n    x: originX + curveWidth,\n    y: originY\n  };\n\n  const controlPoint2 = {\n    x: destinationX - curveWidth,\n    y: destinationY\n  };\n\n  const ref = useTransition(\n    {\n      d: `M ${originX} ${originY} C ${controlPoint1.x} ${controlPoint1.y}, ${controlPoint2.x} ${controlPoint2.y}, ${destinationX} ${destinationY}`\n    },\n    animate ? 5000 : 0,\n    applyAttributeValues\n  );\n\n  const startKnobRef = useTransition(\n    {\n      transform: `translate(${originX - 5}px, ${originY - 5}px)`\n    },\n    animate ? 5000 : 0,\n    applyStyles\n  );\n\n  const endKnobRef = useTransition(\n    {\n      transform: `translate(${destinationX - 8}px, ${destinationY - 16}px)`\n    },\n    animate ? 5000 : 0,\n    applyStyles\n  );\n\n  return (\n    <div style={svgStyle}>\n      <svg style={svgStyle}>\n        <path\n          ref={ref}\n          d=\"M 0 0 C 0 0, 0 0, 0 0\"\n          fill=\"transparent\"\n          stroke=\"black\"\n          strokeWidth=\"3\"\n        />\n      </svg>\n      <div ref={startKnobRef} style={startKnobStyle}></div>\n      <div ref={endKnobRef} style={endKnobStyle}></div>\n    </div>\n  );\n};\n\nexport default PipelinePath;\n"],"file":"PipelinePath.js"}