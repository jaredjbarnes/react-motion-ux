{"version":3,"sources":["../../../src/hooks/useTransition/index.js"],"names":["convertToValues","animatedProperties","Object","keys","reduce","properties","key","value","useTransition","duration","applyValues","objectApplyValues","ref","animate","state","lastAnimatedProperties","timeline","node","current","callbackRef","hasOwnProperty","console","log","values","dispose","isDifferent","animations","Timeline","observe","observeTime","play"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useCallback } from \"react\";\nimport { Timeline } from \"motion-ux\";\nimport createAnimations from \"./createAnimations\";\nimport createAdjustedAnimations from \"./createAdjustedAnimations\";\nimport isEqual from \"../isEqual\";\nimport transformAnimatedProperties from \"./transformAnimatedProperties\";\nimport objectApplyValues from \"./objectApplyValues\";\nimport assertAnimatingTheSameProperties from \"./assertAnimatingTheSameProperties\";\n\nconst convertToValues = animatedProperties => {\n  return Object.keys(animatedProperties).reduce((properties, key) => {\n    properties[key] = animatedProperties[key].value;\n    return properties;\n  }, {});\n};\n\nconst useTransition = (\n  animatedProperties,\n  duration,\n  applyValues = objectApplyValues,\n  ref,\n  animate = true\n) => {\n  const state = useRef({\n    lastAnimatedProperties: null,\n    animatedProperties,\n    duration,\n    applyValues,\n    ref,\n    animate,\n    timeline: null,\n    node: null\n  });\n\n  state.current.animatedProperties = animatedProperties;\n  state.current.duration = duration;\n  state.current.applyValues = applyValues;\n  state.current.ref = ref;\n  state.current.animate = animate;\n\n  // Keep refs up to date.\n  const callbackRef = useCallback(node => {\n    const { animatedProperties, applyValues, ref } = state.current;\n\n    if (node != null) {\n      if (typeof ref === \"function\") {\n        ref(node);\n      } else if (\n        typeof ref === \"object\" &&\n        ref != null &&\n        ref.hasOwnProperty(\"current\")\n      ) {\n        ref.current = node;\n      }\n\n      state.current.node = node;\n\n      console.log(\"Mounted\");\n      // This should run when the element is mounted.\n      const values = convertToValues(animatedProperties);\n\n      applyValues(state.current.node, values);\n      state.current.lastAnimatedProperties = animatedProperties;\n    }\n  }, []);\n\n  // Clean up timeline to prevent memory leak.\n  useEffect(() => {\n    return () => {\n      console.log(\"Unmounted\");\n      if (state.current.timeline != null) {\n        state.current.timeline.dispose();\n      }\n    };\n  }, []);\n\n  if (animatedProperties == null) {\n    // Stop the current animation, if there is one.\n    if (state.current.timeline != null) {\n      state.current.timeline.dispose();\n    }\n\n    // Reset\n    state.current.lastAnimatedProperties = null;\n    return callbackRef;\n  }\n\n  transformAnimatedProperties(animatedProperties);\n\n  const isDifferent = !isEqual(\n    animatedProperties,\n    state.current.lastAnimatedProperties\n  );\n\n  if (state.current.lastAnimatedProperties == null || !animate) {\n    if (state.current.timeline != null) {\n      state.current.timeline.dispose();\n      state.current.timeline = null;\n    }\n\n    const values = convertToValues(animatedProperties);\n\n    if (state.current.node != null) {\n      applyValues(state.current.node, values);\n    }\n\n    state.current.lastAnimatedProperties = animatedProperties;\n    return callbackRef;\n  } else if (isDifferent && state.current.lastAnimatedProperties != null) {\n    assertAnimatingTheSameProperties(\n      animatedProperties,\n      state.current.lastAnimatedProperties\n    );\n\n    if (state.current.timeline == null) {\n      const animations = createAnimations(\n        state.current.lastAnimatedProperties,\n        animatedProperties\n      );\n\n      state.current.timeline = new Timeline({\n        animations: animations,\n        duration: duration\n      });\n    } else {\n      const animations = createAdjustedAnimations(\n        state.current.timeline,\n        state.current.lastAnimatedProperties,\n        animatedProperties\n      );\n\n      state.current.timeline.dispose();\n\n      state.current.timeline = new Timeline({\n        animations: animations,\n        duration: duration\n      });\n    }\n\n    state.current.timeline.observe(\"RENDER\", ({ animations }) => {\n      if (state.current.node != null) {\n        applyValues(state.current.node, animations.useTransition);\n      }\n    });\n\n    state.current.timeline.observeTime(1, () => {\n      state.current.timeline.current = null;\n    });\n\n    state.current.timeline.play();\n    state.current.lastAnimatedProperties = animatedProperties;\n\n  }\n\n  return callbackRef;\n};\n\nexport default useTransition;\n"],"file":"index.js"}