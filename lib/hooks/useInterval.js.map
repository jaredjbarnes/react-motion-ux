{"version":3,"sources":["../../src/hooks/useInterval.js"],"names":["useInterval","callback","time","callbackRef","current","interval","setInterval","clearInterval"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,IAAX,EAAoB;AACtC,MAAMC,WAAW,GAAG,mBAAO,IAAP,CAApB;AACA,wBAAU,YAAM;AACdA,IAAAA,WAAW,CAACC,OAAZ,GAAsBH,QAAtB;AACD,GAFD,EAEG,CAACA,QAAD,CAFH;AAIA,wBAAU,YAAM;AACd,QAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAMG,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjCH,QAAAA,WAAW,CAACC,OAAZ;AACD,OAF2B,EAEzBF,IAFyB,CAA5B;AAIA,aAAO,YAAM;AACXK,QAAAA,aAAa,CAACF,QAAD,CAAb;AACD,OAFD;AAGD;AACF,GAVD,EAUG,CAACH,IAAD,CAVH;AAWD,CAjBD;;eAmBeF,W","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst useInterval = (callback, time) => {\n  const callbackRef = useRef(null);\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (typeof time === \"number\") {\n      const interval = setInterval(() => {\n        callbackRef.current();\n      }, time);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n  }, [time]);\n};\n\nexport default useInterval;\n"],"file":"useInterval.js"}